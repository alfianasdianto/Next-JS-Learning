{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\reactjs\\\\nextjs\\\\hello-next\\\\pages\\\\p\\\\[id].js\";\nimport React from \"react\";\nimport { useRouter } from 'next/router';\nimport Layout from '../../components/MyLayout.js';\nimport fetch from 'isomorphic-unfetch';\nimport Markdown from 'react-markdown';\n\nvar Post = function Post(props) {\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.show.name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, props.show.summary.replace(/<[/]?p>/g, '')), React.createElement(\"img\", {\n    src: props.show.image.medium,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n};\n\nPost.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var id, res, show;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = context.query.id;\n            _context.next = 3;\n            return fetch(\"https://api.tvmaze.com/shows/\".concat(id));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            show = _context.sent;\n            console.log(\"Fetched show: \".concat(show.name));\n            return _context.abrupt(\"return\", {\n              show: show\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default (function () {\n  var router = useRouter();\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, router.query.id), React.createElement(\"div\", {\n    className: \"markdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Markdown, {\n    source: \"\\n                    This is our blog post.\\n                    Yes. We can have a [link](/link).\\n                    And we can have a title as well.\\n                    \\n                    ### This is a title\\n                    \\n                    And here's the content.\\n                \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })));\n}); // export default Post;","map":{"version":3,"sources":["C:\\reactjs\\nextjs\\hello-next\\pages\\p\\[id].js"],"names":["useRouter","Layout","fetch","Markdown","Post","props","show","name","summary","replace","image","medium","getInitialProps","context","id","query","res","json","console","log","router"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,QAAP,MAAqB,gBAArB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK;AAAA,SACd,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,IAAN,CAAWC,IAAhB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,KAAK,CAACC,IAAN,CAAWE,OAAX,CAAmBC,OAAnB,CAA2B,UAA3B,EAAuC,EAAvC,CAAJ,CAFJ,EAGI;AAAK,IAAA,GAAG,EAAEJ,KAAK,CAACC,IAAN,CAAWI,KAAX,CAAiBC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADc;AAAA,CAAlB;;AAQAP,IAAI,CAACQ,eAAL;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,YAAAA,EADW,GACJD,OAAO,CAACE,KADJ,CACXD,EADW;AAAA;AAAA,mBAEDZ,KAAK,wCAAiCY,EAAjC,EAFJ;;AAAA;AAEbE,YAAAA,GAFa;AAAA;AAAA,mBAGAA,GAAG,CAACC,IAAJ,EAHA;;AAAA;AAGbX,YAAAA,IAHa;AAKnBY,YAAAA,OAAO,CAACC,GAAR,yBAA6Bb,IAAI,CAACC,IAAlC;AALmB,6CAOZ;AAAED,cAAAA,IAAI,EAAJA;AAAF,aAPY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAUA,gBAAe,YAAM;AACjB,MAAMc,MAAM,GAAGpB,SAAS,EAAxB;AACA,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKoB,MAAM,CAACL,KAAP,CAAaD,EAAlB,CADJ,EAEI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,MAAM,iTAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CADJ;AAqCH,CAvCD,E,CAyCA","sourcesContent":["import { useRouter } from 'next/router';\nimport Layout from '../../components/MyLayout.js';\nimport fetch from 'isomorphic-unfetch';\n\nimport Markdown from 'react-markdown';\n\nconst Post = props => (\n    <Layout>\n        <h1>{props.show.name}</h1>\n        <p>{props.show.summary.replace(/<[/]?p>/g, '')}</p>\n        <img src={props.show.image.medium} />\n    </Layout>\n)\n\nPost.getInitialProps = async function(context) {\n    const { id } = context.query;\n    const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n    const show = await res.json();\n    \n    console.log(`Fetched show: ${show.name}`);\n\n    return { show };\n}\n\nexport default () => {\n    const router = useRouter();\n    return (\n        <Layout>\n            <h1>{router.query.id}</h1>\n            <div className=\"markdown\">\n                <Markdown source={`\n                    This is our blog post.\n                    Yes. We can have a [link](/link).\n                    And we can have a title as well.\n                    \n                    ### This is a title\n                    \n                    And here's the content.\n                `} \n                />\n            </div>\n            {/* <style jsx global>{`\n                .markdown {\n                    font-family: 'Arial';\n                }\n\n                .markdown a {\n                    text-decoration: none;\n                    color: blue;\n                }\n\n                .markdown a:hover {\n                    opacity: 0.6;\n                }\n\n                .markdown h3 {\n                    margin: 0;\n                    padding: 0;\n                    text-transform: uppercase;\n                }\n            `}</style> */}\n        </Layout>\n    )\n}\n\n// export default Post;"]},"metadata":{},"sourceType":"module"}