{"version":3,"file":"static/webpack/static\\development\\pages\\p\\[id].js.dfb3c5f7ab167f01c6e8.hot-update.js","sources":["webpack:///./pages/p/.js"],"sourcesContent":["import { useRouter } from 'next/router';\nimport Layout from '../../components/MyLayout.js';\nimport fetch from 'isomorphic-unfetch';\n\nimport Markdown from 'react-markdown';\n\nconst Post = props => (\n    <Layout>\n        <h1>{props.show.name}</h1>\n        <p>{props.show.summary.replace(/<[/]?p>/g, '')}</p>\n        <img src={props.show.image.medium} />\n    </Layout>\n)\n\nPost.getInitialProps = async function(context) {\n    const { id } = context.query;\n    const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n    const show = await res.json();\n    \n    console.log(`Fetched show: ${show.name}`);\n\n    return { show };\n}\n\nexport default () => {\n    const router = useRouter();\n    return (\n        <Layout>\n            <h1>{router.query.id}</h1>\n            <div className=\"markdown\">\n                <Markdown source={`\n                    This is our blog post.\n                    Yes. We can have a [link](/link).\n                    And we can have a title as well.\n                    \n                    ### This is a title\n                    \n                    And here's the content.\n                `} \n                />\n            </div>\n            <style jsx global>{`\n                .markdown {\n                    font-family: 'Arial';\n                }\n\n                .markdown a {\n                    text-decoration: none;\n                    color: blue;\n                }\n\n                .markdown a:hover {\n                    opacity: 0.6;\n                }\n\n                .markdown h3 {\n                    margin: 0;\n                    padding: 0;\n                    text-transform: uppercase;\n                }\n            `}</style>\n        </Layout>\n    )\n}\n\n// export default Post;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AACA;AADA;AAGA;AAEA;AALA;AAOA;AAAA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAoCA;;;;A","sourceRoot":""}